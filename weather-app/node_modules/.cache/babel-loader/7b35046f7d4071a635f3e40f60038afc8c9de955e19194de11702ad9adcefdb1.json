{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Segun\\\\OneDrive\\\\Documents\\\\GitHub\\\\react_portfolio\\\\weather-app\\\\src\\\\components\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fetchWeather = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=f9c1dd50171f5ae1bfee0ecb6dbebeba\n&units=metric`);\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error(\"Error fetching the weather data\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"Enter city name\",\n      className: \"weather-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      className: \"weather-button\",\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: weatherData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weatherData.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.main.temp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"tBuaoUBDUg4U8ft4ZdSlCimeXVg=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","city","setCity","loading","setLoading","fetchWeather","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","name","weather","description","main","temp","humidity","_c","$RefreshReg$"],"sources":["C:/Users/Segun/OneDrive/Documents/GitHub/react_portfolio/weather-app/src/components/Weather.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Weather.css';\r\n\r\nconst Weather = () => {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [city, setCity] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchWeather = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=f9c1dd50171f5ae1bfee0ecb6dbebeba\r\n&units=metric`);\r\n            const data = await response.json();\r\n            setWeatherData(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching the weather data\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"weather-container\">\r\n            <h2>Weather Information</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n                placeholder=\"Enter city name\"\r\n                className=\"weather-input\"\r\n            />\r\n            <button onClick={fetchWeather} className=\"weather-button\">Get Weather</button>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            {weatherData && (\r\n                <div className=\"weather-info\">\r\n                    <h3>{weatherData.name}</h3>\r\n                    <p>{weatherData.weather[0].description}</p>\r\n                    <p>Temperature: {weatherData.main.temp} Â°C</p>\r\n                    <p>Humidity: {weatherData.main.humidity} %</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}