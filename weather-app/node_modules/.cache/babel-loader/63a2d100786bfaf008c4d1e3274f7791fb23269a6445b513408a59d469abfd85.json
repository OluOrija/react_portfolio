{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Segun\\\\OneDrive\\\\Documents\\\\GitHub\\\\react_portfolio\\\\weather-app\\\\src\\\\components\\\\Weather.js\",\n  _s = $RefreshSig$();\n/* import React, { useState } from 'react';\r\nimport './Weather.css';\r\n\r\nconst Weather = () => {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [city, setCity] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchWeather = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=f9c1dd50171f5ae1bfee0ecb6dbebeba&units=metric`);\r\n            const data = await response.json();\r\n            setWeatherData(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching the weather data\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"weather-container\">\r\n            <h2>Weather Information</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n                placeholder=\"Enter city name\"\r\n                className=\"weather-input\"\r\n            />\r\n            <button onClick={fetchWeather} className=\"weather-button\">Get Weather</button>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            {weatherData && (\r\n                <div className=\"weather-info\">\r\n                    <h3>{weatherData.name}</h3>\r\n                    <p>{weatherData.weather[0].description}</p>\r\n                    <p>Temperature: {weatherData.main.temp} °C</p>\r\n                    <p>Humidity: {weatherData.main.humidity} %</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  var _city$main, _city$main2, _city$main3;\n  const [city, setCity] = useState('');\n  const [search, setSearch] = useState('');\n  const fetchApi = async () => {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=83ea3057047027c6c4521d32d69250a0`;\n      const res = await fetch(url);\n      const data = await res.json();\n      setCity(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchApi();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"inputData\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"inputFeild\",\n          value: search,\n          placeholder: \"Enter city\",\n          onChange: event => {\n            setSearch(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), !city ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter city or country to know weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../images/weather.png\",\n            alt: \"image\",\n            className: \"info-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"temp\",\n            children: [city === null || city === void 0 ? void 0 : (_city$main = city.main) === null || _city$main === void 0 ? void 0 : _city$main.temp, \" \\xB0Cel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"tempmin_max\",\n            children: [\"Min : \", (_city$main2 = city.main) === null || _city$main2 === void 0 ? void 0 : _city$main2.temp_min, \" \\xB0Cel | Max : \", (_city$main3 = city.main) === null || _city$main3 === void 0 ? void 0 : _city$main3.temp_max, ' ', \"\\xB0Cel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wave -one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wave -two\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wave -three\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Weather, \"hkgiTCgXmvJoJUjmb7p/WXjbdP8=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Weather","_s","_city$main","_city$main2","_city$main3","city","setCity","search","setSearch","fetchApi","url","res","fetch","data","json","error","console","log","handleSubmit","e","preventDefault","children","className","onSubmit","type","value","placeholder","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","main","temp","temp_min","temp_max","_c","$RefreshReg$"],"sources":["C:/Users/Segun/OneDrive/Documents/GitHub/react_portfolio/weather-app/src/components/Weather.js"],"sourcesContent":["/* import React, { useState } from 'react';\r\nimport './Weather.css';\r\n\r\nconst Weather = () => {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [city, setCity] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchWeather = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=f9c1dd50171f5ae1bfee0ecb6dbebeba&units=metric`);\r\n            const data = await response.json();\r\n            setWeatherData(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching the weather data\", error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"weather-container\">\r\n            <h2>Weather Information</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={city}\r\n                onChange={(e) => setCity(e.target.value)}\r\n                placeholder=\"Enter city name\"\r\n                className=\"weather-input\"\r\n            />\r\n            <button onClick={fetchWeather} className=\"weather-button\">Get Weather</button>\r\n\r\n            {loading && <p>Loading...</p>}\r\n\r\n            {weatherData && (\r\n                <div className=\"weather-info\">\r\n                    <h3>{weatherData.name}</h3>\r\n                    <p>{weatherData.weather[0].description}</p>\r\n                    <p>Temperature: {weatherData.main.temp} °C</p>\r\n                    <p>Humidity: {weatherData.main.humidity} %</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n */\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Weather = () => {\r\n  const [city, setCity] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const fetchApi = async () => {\r\n    try {\r\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=83ea3057047027c6c4521d32d69250a0`;\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      setCity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchApi();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <form onSubmit={handleSubmit} className=\"inputData\">\r\n          <input\r\n            type=\"search\"\r\n            className=\"inputFeild\"\r\n            value={search}\r\n            placeholder=\"Enter city\"\r\n            onChange={(event) => {\r\n              setSearch(event.target.value);\r\n            }}\r\n          />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n        {!city ? (\r\n          <p>Enter city or country to know weather</p>\r\n        ) : (\r\n          <div>\r\n            <div className=\"info\">\r\n              <img\r\n                src=\"../images/weather.png\"\r\n                alt=\"image\"\r\n                className=\"info-img\"\r\n              />\r\n              <h1 className=\"temp\">{city?.main?.temp} °Cel</h1>\r\n\r\n              <h3 className=\"tempmin_max\">\r\n                Min : {city.main?.temp_min} °Cel | Max : {city.main?.temp_max}{' '}\r\n                °Cel\r\n              </h3>\r\n            </div>\r\n            <div className=\"wave -one\"></div>\r\n            <div className=\"wave -two\"></div>\r\n            <div className=\"wave -three\"></div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}